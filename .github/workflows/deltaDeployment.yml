name: Salesforce Check-Only Deployment

on:
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18  # Adjust to your desired Node.js version

    - name: Install Salesforce CLI and Custom Plugin
      run: |
        npm install @salesforce/cli --global
        sfdx plugins:install sfdx-git-delta
    - name: Authenticate with Salesforce CLI
      run: |
        # Extract Salesforce CLI authentication information from GitHub secret
        SF_USERNAME=${{ secrets.UAT_USERNAME }}
        SF_PASSWORD=${{ secrets.UAT_PASSWORD }}
        SF_SECURITY_TOKEN=${{ secrets.TARGET_ORG_UAT }}
        
        # Authenticate with Salesforce CLI
        sfdx force:auth:web:login -u $UAT_USERNAME -p $UAT_PASSWORD -r https://test.salesforce.com -s $TARGET_ORG_UAT
      env:
        SF_USERNAME: ${{ secrets.UAT_USERNAME }}
        SF_PASSWORD: ${{ secrets.UAT_PASSWORD}}
        SF_SECURITY_TOKEN: ${{ secrets.TARGET_ORG_UAT }}
        - name: Determine Feature Branch
          id: feature_branch
          run: |
            # Get the base branch of the pull request (e.g., int_release or uat)
            FEATURE_BRANCH=$(echo ${{ github.event.pull_request.base.ref }})
            echo "::set-output name=branch::$FEATURE_BRANCH"
          if: github.event_name == 'pull_request'

    - name: Create and Deploy Delta Package (Check-Only)
      if: (github.event_name == 'pull_request' && steps.feature_branch.outputs.branch == 'main')
      run: |
        # Get the feature branch from the previous step's output
        FEATURE_BRANCH="${{ steps.feature_branch.outputs.branch }}"

        # Create delta folder
        mkdir delta

        # Generate your delta package using the sfdx sgd:source:delta command for the feature branch
        cd delta  # Change to the delta folder
        sfdx sgd:source:delta --to "feature/$FEATURE_BRANCH" --from main --output .  # Output directly to the current folder

        # Perform a check-only (validation-only) deployment to int_release or uat
        cd ..  # Change back to the workspace folder
        sfdx force:source:deploy -x package.xml -u $TARGET_ORG_UAT --checkonly # Add '--checkonly' flag
        sfdx force:source:deploy -x delta/package/package.xml -u $TARGET_ORG_UAT --checkonly --postdestructivechanges delta/destructiveChanges/destructiveChanges.xml -l RunLocalTests
      env:
        TARGET_ORG_UAT: ${{ secrets.TARGET_ORG_UAT }}
